<!DOCTYPE html>
<html lang="en" class="scroll-smooth">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Women's Safety App</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- Font Awesome CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <!-- For the map show in the map section  -->
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <!-- Leaflet JS -->
    <!-- Gesture handeling pluggin -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet-gesture-handling/dist/leaflet-gesture-handling.min.css" />







    <!-- Fade Animations -->
    <style>
        @keyframes fadeIn {
            0% {
                opacity: 0;
            }

            100% {
                opacity: 1;
            }
        }

        @keyframes fadeInDown {
            0% {
                opacity: 0;
                transform: translateY(-20px);
            }

            100% {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animate-fade-in {
            animation: fadeIn 0.8s ease-out both;
        }

        .animate-fade-in-down {
            animation: fadeInDown 0.8s ease-out both;
        }

        /* for location access */
        #locationPopup {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }

        #popupContent {
            background: white;
            padding: 30px;
            border-radius: 8px;
            text-align: center;
        }

        #popupContent button {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #007BFF;
            border: none;
            color: white;
            border-radius: 5px;
            cursor: pointer;
        }

        /* for panic btn */
        /* Orbit animation */
        @keyframes orbit {
            0% {
                transform: rotate(0deg) translateX(5px) rotate(0deg);
            }

            100% {
                transform: rotate(360deg) translateX(5px) rotate(-360deg);
            }
        }

        /* Radiation pulse animation */
        @keyframes pulse {
            0% {
                transform: scale(1);
                opacity: 1;
            }

            100% {
                transform: scale(1.8);
                opacity: 0.2;
            }
        }

        .orbit-ring {
            animation: orbit 2s linear infinite;
        }

        .radiation-pulse {
            animation: pulse 1.5s ease-out infinite;
        }
    </style>

</head>

<body class="bg-gray-900 text-blue-300 font-sans relative">

    <header class="bg-gray-800 text-white px-6 py-4 flex justify-between items-center shadow-lg fixed z-50 w-full">
        <!-- Logo -->
        <div class="flex items-center space-x-2">
            <img src="../logo.jpg" alt="Logo" class="h-8 w-8">
            <h1 id="name" class="text-xl font-bold text-blue-400">Welcome , <%= user.name %>
            </h1>
        </div>

        <!-- Desktop Nav -->
        <nav class="space-x-6 hidden md:flex">
            <button class="nav-btn text-blue-300 hover:text-blue-400 transition" data-target="home">Home</button>
            <button class="nav-btn text-blue-300 hover:text-blue-400 transition" data-target="profile">Profile</button>
            <button class="nav-btn text-blue-300 hover:text-blue-400 transition"
                data-target="settings">Settings</button>
            <button class="nav-btn text-blue-300 hover:text-blue-400 transition" data-target="safety">Safety
                Tips</button>
            <button class="nav-btn text-blue-300 hover:text-blue-400 transition" data-target="map">View Map</button>
            <a href="/logout" id="logout"
                class="bg-red-500 py-2 px-4 rounded-sm text-white font-semibold hover:bg-red-600">Logout</a>

        </nav>

        <!-- Mobile Menu Toggle (you can wire this up separately) -->
        <div class="md:hidden text-blue-300 hover:text-blue-400">
            <img class="rounded-full w-12 h-12" id="profileImage"
                src="/uploads/<%= user.profileImage ? user.profileImage : '../logo.jpg' %>" alt="profileImage">
        </div>
    </header>

    <!-- Location Popup -->
    <div id="locationPopup" class="fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50">
        <div class="bg-white p-8 rounded-lg text-center">
            <h2 class="text-2xl font-semibold mb-4">Location Permission Required</h2>
            <p class="mb-6 text-gray-600">We need your location (foreground and background) for safety reasons.</p>

            <div id="spinner" class="hidden flex justify-center mb-4">
                <div class="w-10 h-10 border-4 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
            </div>

            <button id="allowBtn"
                class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-6 rounded transition"
                onclick="requestLocation()">
                Allow Location Access
            </button>
        </div>
    </div>
    <main>
        <div class="main-container py-10 ">
            <!-- Main Sections -->

            <section id="home"
                class="section h-auto py-16 bg-gray-800 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
                <!-- Hero / Welcome -->
                <div class="max-w-3xl mx-auto text-center px-4 animate-fade-in">
                    <h1 class="text-4xl md:text-5xl font-extrabold mb-4 animate-fade-in-down">
                        Welcome to Women's Safety
                    </h1>
                    <p class="text-blue-500 dark:text-blue-400 text-lg md:text-xl">
                        Your safety, our priority. Stay connected, stay secure.
                    </p>
                </div>

                <div
                    class="p-6 pb-16 animate-fade-in animate-fade-in-down sm:max-w-6xl bg-gray-800 shadow-lg rounded-2xl mt-10 border border-gray-700 w-full mx-auto">
                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 ">
                        <!-- Panic Button -->
                        <div class="bg-gray-700 rounded-lg flex justify-center items-center p-6">
                            <div class="relative w-48 h-48 flex justify-center items-center">

                                <!-- Orbiting Ring -->
                                <div
                                    class="orbit-ring absolute w-full h-full border-4 border-red-500 border-opacity-50 rounded-full">
                                </div>

                                <!-- Radiation Pulse -->
                                <div
                                    class="radiation-pulse absolute w-full h-full bg-red-500 bg-opacity-30 rounded-full">
                                </div>

                                <!-- Panic Button -->
                                <button id="panicBtn" onclick="triggerEmergency()"
                                    class="w-44 h-44 rounded-full bg-red-600 text-white text-3xl flex items-center justify-center shadow-lg hover:scale-105 hover:shadow-xl transition-transform duration-300 z-10"
                                    title="Panic Button">
                                    <div class="flex flex-col items-center justify-center">
                                        <i class="fas fa-exclamation-triangle"></i>
                                        <h3 class="font-semibold text-lg">PANIC</h3>
                                    </div>
                                </button>
                            </div>

                        </div>

                        <div id="stopSoundBtn"
                            class="bg-gray-700 p-4 hidden text-white flex items-start items-center gap-4">
                            <button
                                class="btn btn-secondary bg-red-500 px-4 py-2 rounded-2xl items-center justify-center">Stop
                                Sound</button>

                        </div>

                        <!-- Panic Button -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start items-center gap-4">
                            <i class="fas fa-location-arrow text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">PANIC Settings</h3>
                                <p class="text-sm text-gray-300">Act While Click on Panic : <%= setting.alertMode %>
                                </p>
                                <p class="text-sm text-gray-300">Live Location Sharing : <%= setting.liveLocation %>
                                </p>

                            </div>
                        </div>
                        <!-- Emergency Contacts -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start items-center gap-4">
                            <i class="fas fa-moon text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Emergency Contacts</h3>
                                <p class="text-sm text-gray-300">Total Number Saved : <%= EmergencyDetails.length %>
                                </p>
                            </div>
                        </div>

                    </div>
                    <!-- <img src="../p-s.mp3" alt=""> -->
                </div>


            </section>
            <!-- profile -->
            <section id="profile"
                class="section hidden h-screen flex flex-col justify-center items-center transition-all duration-700 bg-gray-800">
                <h1 class="text-4xl font-bold mb-4 animate-fade-in-down">Profile</h1>
                <p class="text-blue-400 max-w-md text-center animate-fade-in">Manage your details and trusted contacts.
                </p>
                <div
                    class="p-6 animate-fade-in-down sm:max-w-4xl bg-gray-800 shadow-lg rounded-2xl mt-10 border border-gray-700 w-full">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-2xl font-semibold text-purple-400">My Profile</h2>
                        <button onclick="toggleEdit()"
                            class="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition">
                            Edit
                        </button>
                    </div>

                    <div class="flex flex-col sm:flex-row sm:items-start gap-6">
                        <!-- Profile Image and Upload -->
                        <div class="flex flex-col items-center">
                            <img src="" alt="">
                            <img class="w-28 h-28 rounded-full border-4 border-purple-500 shadow-md object-cover"
                                id="profileImg"
                                src="/uploads/<%= user.profileImage ? user.profileImage : '/logo.jpg' %>" alt="Profile">
                            <input id="imageUpload" type="file" accept="image/*" class="mt-4 hidden"
                                onchange="previewImage(event)" />
                            <label for="imageUpload"
                                class="mt-2 px-3 py-1 text-sm text-white bg-purple-500 rounded cursor-pointer hover:bg-purple-600 transition hidden"
                                id="uploadLabel">Change Photo</label>
                        </div>

                        <div class="flex-1 grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <!-- Display Section -->
                            <div id="profile-display">
                                <div>
                                    <label class="block text-sm text-gray-400">Name</label>
                                    <p class="name text-gray-200">
                                        <%= user.name %>
                                    </p>
                                </div>
                                <div>
                                    <label class="block text-sm text-gray-400">Email</label>
                                    <p class="text-gray-200">
                                        <%= user.email %>
                                    </p>
                                </div>
                                <div>
                                    <label class="block text-sm text-gray-400">Phone</label>
                                    <p class="text-gray-200">
                                        <%= user.phone %>
                                    </p>
                                </div>
                                <div>
                                    <label class="block text-sm text-gray-400">Address</label>
                                    <p class="text-gray-200">
                                        <%= user.address %>
                                    </p>
                                </div>
                            </div>

                            <!-- Edit Section (Hidden by default) -->
                            <form id="profile-edit" class="hidden col-span-2 grid grid-cols-1 sm:grid-cols-2 gap-4"
                                onsubmit="saveProfile(event)">
                                <div>
                                    <label class="block text-sm text-gray-400">Name</label>
                                    <input type="text" name="name" value="<%= user.name %>"
                                        class="w-full border border-gray-500 p-2 rounded-md focus:ring-2 focus:ring-purple-400 text-white bg-gray-700" />
                                </div>
                                <div>
                                    <label class="block text-sm text-gray-400">Email</label>
                                    <input type="email" name="email" value="<%= user.email %>"
                                        class="w-full border border-gray-500 p-2 rounded-md focus:ring-2 focus:ring-purple-400 text-white bg-gray-700" />
                                </div>
                                <div>
                                    <label class="block text-sm text-gray-400">Phone</label>
                                    <input type="text" name="phone" value="<%= user.phone %>"
                                        class="w-full border border-gray-500 p-2 rounded-md focus:ring-2 focus:ring-purple-400 text-white bg-gray-700" />
                                </div>
                                <div>
                                    <label class="block text-sm text-gray-400">Address</label>
                                    <input type="text" name="address" value="<%= user.address %>"
                                        class="w-full border border-gray-500 p-2 rounded-md focus:ring-2 focus:ring-purple-400 text-white bg-gray-700" />
                                </div>
                                <div class="col-span-2 text-right mt-4">
                                    <button type="submit"
                                        class="px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition">
                                        Save Changes
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </section>
            <!-- Setting -->
            <section id="settings"
                class="section hidden h-screen flex flex-col items-center justify-start pt-16 px-4 bg-gray-900 text-white">

                <h1 class="text-4xl font-bold mb-4 animate-fade-in-down">Settings</h1>
                <p class="text-blue-400 max-w-md text-center animate-fade-in mb-6">Customize your alerts and save
                    emergency contacts.</p>
                <form id="settingsForm"
                    class="space-y-6 w-full animate-fade-in-down max-w-3xl bg-gray-800 p-6 rounded-lg shadow-lg">
                    <!-- Emergency Contact -->
                    <!-- <div>
                        <h2 class="text-xl font-semibold mb-2 animate-fade-in">Emergency Contact</h2>
                        <input type="text" name="emergencyContact" id="emergencyContact"
                            placeholder="Enter phone number" class="w-full p-2 rounded text-black" required />
                    </div> -->

                    <!-- Alert Mode -->
                    <div>
                        <h2 class="text-xl font-semibold mb-2">Alert Mode</h2>
                        <select name="alertMode" id="alertMode" class="w-full p-2 rounded text-black" required>
                            <option value="vibration-sound">Vibration + Sound</option>
                            <option value="sound-only">Sound Only</option>
                            <option value="vibration-only">Vibration Only</option>
                            <option value="silent">Silent Alert (Notify contact only)</option>
                        </select>
                    </div>

                    <!-- Safe Zone Radius -->
                    <!-- <div>
                          <h2 class="text-xl font-semibold mb-2">Safe Zone Radius (meters)</h2>
                          <input type="number" name="safeZone" id="safeZone" min="100" max="5000" placeholder="e.g. 1000"
                            class="w-full p-2 rounded text-black" required />
                        </div> -->

                    <!-- Live Location Sharing -->
                    <div class="flex items-center justify-between">
                        <h2 class="text-xl font-semibold">Live Location Sharing</h2>
                        <label class="inline-flex items-center cursor-pointer">
                            <input type="checkbox" name="liveLocation" id="liveLocation" class="sr-only peer" />
                            <div class="w-11 h-6 bg-gray-600 rounded-full peer-checked:bg-blue-500 transition-all">
                            </div>
                        </label>
                    </div>

                    <!-- Notification Alerts -->
                    <!-- <div class="flex items-center justify-between">
                          <h2 class="text-xl font-semibold">Notification Alerts</h2>
                          <label class="inline-flex items-center cursor-pointer">
                            <input type="checkbox" name="notifyAlerts" id="notifyAlerts" class="sr-only peer" />
                            <div class="w-11 h-6 bg-gray-600 rounded-full peer-checked:bg-blue-500 transition-all"></div>
                          </label>
                        </div>
                       -->
                    <!-- Save Button -->
                    <div class="text-center">
                        <button type="submit" class="bg-blue-600 px-6 py-2 rounded hover:bg-blue-700 transition-all">
                            Save Settings
                        </button>
                    </div>
                    <p id="responseMsg" class="text-center mt-4 text-green-500 hidden "></p>

                </form>
                <!-- Success/Error Message -->
                <form id="emergencyContactForm"
                    class="space-y-6 mt-10 w-full animate-fade-in-down max-w-3xl bg-gray-800 p-6 rounded-lg shadow-lg">
                    <!-- Emergency Contact -->
                    <div>
                        <h2 class="text-xl font-semibold mb-2 animate-fade-in">Emergency Contact</h2>
                        <input type="text" name="emergencyContact" id="emergencyContact"
                            placeholder="Enter phone number" class="w-full p-2 rounded text-black" required />
                    </div>
                    <!-- Emergency Contact Email -->
                    <div>
                        <h2 class="text-xl font-semibold mb-2 animate-fade-in">Emergency Contact Email</h2>
                        <input type="email" name="emergencyContactEmail" id="emergencyContactEmail"
                            placeholder="Enter Email Address" class="w-full p-2 rounded text-black" required />
                    </div>
                    <!-- Name of the emergency contact -->
                    <div>
                        <h2 class="text-xl font-semibold mb-2 animate-fade-in">Name of the emergency contact</h2>
                        <input type="text" name="emergencyContactName" id="emergencyContactName"
                            placeholder="Enter name" class="w-full p-2 rounded text-black" required />
                    </div>
                    <!-- Relation -->
                    <div>
                        <h2 class="text-xl font-semibold mb-2 animate-fade-in">Relation</h2>
                        <input type="text" name="relation" id="relation" placeholder="Enter relation"
                            class="w-full p-2 rounded text-black" required />
                    </div>
                    <!-- Setting save -->
                    <div class="text-center">
                        <button type="submit" class="bg-blue-600 px-6 py-2 rounded hover:bg-blue-700 transition-all">
                            Save Settings
                        </button>
                    </div>
                    <p id="responseMsgForEmergencyContact" class="text-center mt-4 text-green-500 hidden"></p>

                </form>
                <!-- Success/Error Message -->
                <!-- Show the emergency contact details -->
                <div
                    class="p-6 pb-16 animate-fade-in animate-fade-in-down sm:max-w-6xl bg-gray-800 shadow-lg rounded-2xl mt-10 border border-gray-700 w-full mx-auto">
                    <h2 class="text-white text-3xl font-bold mb-6 text-center">Emergency Contact Details</h2>
                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">

                        <% if (EmergencyDetails && EmergencyDetails.length> 0) { %>
                            <% EmergencyDetails.forEach(detail=> { %>
                                <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4 mb-4 relative">
                                    <i class="fas fa-location-arrow text-pink-400 text-2xl mt-1"></i>
                                    <div>
                                        <h3 class="font-semibold text-lg">Name: <%= detail.contactName %>
                                        </h3>
                                        <p class="text-sm text-gray-300">Number: <%= detail.contactNumber %>
                                        </p>
                                        <p class="text-sm text-gray-300">Email : <%= detail.emergencyContactEmail %>
                                        </p>
                                        <p class="text-sm text-gray-300">Relation: <%= detail.relation %>
                                        </p>
                                    </div>
                                    <button
                                        class="absolute top-2 right-2 bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded text-sm delete-contact-btn"
                                        data-id="<%= detail._id %>">
                                        Delete
                                    </button>
                                </div>
                                <% }) %>
                                    <% } else { %>
                                        <p class="text-gray-400">No emergency contacts added yet.</p>
                                        <% } %>



                    </div>
                </div>
            </section>
            <!-- Safety Section -->
            <section id="safety"
                class="section mt-16 hidden flex flex-col justify-center items-center transition-all duration-700 ">
                <h1 class="text-4xl font-bold mb-4 animate-fade-in-down">Safety Tips</h1>
                <p class="text-blue-400 max-w-md text-center animate-fade-in">Learn smart safety practices to stay
                    aware.
                </p>
                <div
                    class="p-6 pb-16 animate-fade-in animate-fade-in-down sm:max-w-6xl bg-gray-800 shadow-lg rounded-2xl mt-10 border border-gray-700 w-full mx-auto">
                    <h2 class="text-white text-3xl font-bold mb-6 text-center">Top 10 Women Safety Tips</h2>
                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">

                        <!-- Tip 1 -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4">
                            <i class="fas fa-location-arrow text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Share Travel Plans</h3>
                                <p class="text-sm text-gray-300">Let someone close know your route and expected arrival
                                    time.</p>
                            </div>
                        </div>

                        <!-- Tip 2 -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4">
                            <i class="fas fa-moon text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Avoid Isolated Places</h3>
                                <p class="text-sm text-gray-300">Stay in well-lit and public areas, especially after
                                    dark.</p>
                            </div>
                        </div>

                        <!-- Tip 3 -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4">
                            <i class="fas fa-phone-alt text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Emergency Contacts</h3>
                                <p class="text-sm text-gray-300">Keep police and family contacts on speed dial.</p>
                            </div>
                        </div>

                        <!-- Tip 4 -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4">
                            <i class="fas fa-eye text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Be Aware</h3>
                                <p class="text-sm text-gray-300">Always be mindful of your environment and the people
                                    around you.</p>
                            </div>
                        </div>

                        <!-- Tip 5 -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4">
                            <i class="fas fa-exclamation-triangle text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Trust Your Instincts</h3>
                                <p class="text-sm text-gray-300">If something feels off, remove yourself from the
                                    situation.</p>
                            </div>
                        </div>

                        <!-- Tip 6 -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4">
                            <i class="fas fa-hand-fist text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Learn Self-Defense</h3>
                                <p class="text-sm text-gray-300">Basic martial arts or defense skills can be lifesaving.
                                </p>
                            </div>
                        </div>

                        <!-- Tip 7 -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4">
                            <i class="fas fa-shield-alt text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Carry Safety Tools</h3>
                                <p class="text-sm text-gray-300">Pepper spray, whistle, or a safety alarm can help deter
                                    threats.</p>
                            </div>
                        </div>

                        <!-- Tip 8 -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4">
                            <i class="fas fa-user-secret text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Protect Personal Info</h3>
                                <p class="text-sm text-gray-300">Don’t share too much on social media or with strangers.
                                </p>
                            </div>
                        </div>

                        <!-- Tip 9 -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4">
                            <i class="fas fa-car-side text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Lock Car Doors</h3>
                                <p class="text-sm text-gray-300">Lock the car as soon as you enter and keep windows up.
                                </p>
                            </div>
                        </div>

                        <!-- Tip 10 -->
                        <div class="bg-gray-700 p-4 rounded-lg text-white flex items-start gap-4">
                            <i class="fas fa-mobile-alt text-pink-400 text-2xl mt-1"></i>
                            <div>
                                <h3 class="font-semibold text-lg">Use Safety Apps</h3>
                                <p class="text-sm text-gray-300">Install apps that share your location and alert
                                    contacts in danger.</p>
                            </div>
                        </div>

                    </div>
                </div>


            </section>
            <!-- Map Section -->
            <section id="map" class="my-16 section flex flex-col justify-center items-center bg-gray-900 text-white">
                <h1 class="text-4xl font-bold mb-4">View Map</h1>
                <p class="text-blue-400 max-w-md text-center mb-4">Locate nearby safe areas quickly.</p>

                <div id="userMap" class="w-full max-w-6xl h-[500px] rounded-lg border border-gray-700 shadow-lg"></div>
            </section>
        </div>

        <!-- Bottom Navbar -->
        <div
            class="fixed bottom-0 left-0 right-0 bg-gray-800 border-t-2 border-blue-400 shadow-inner sm:hidden rounded-2xl z-50">
            <ul class="flex justify-around items-center py-3">
                <li><button class="nav-btn flex flex-col items-center text-blue-300 hover:text-blue-400 transition"
                        data-target="home">
                        <svg class="h-6 w-6 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path d="M3 12l2-2 7-7 7 7 2 2M13 5v6h6"></path>
                        </svg>
                        <span class="text-xs">Home</span>
                    </button></li>
                <li><button class="nav-btn flex flex-col items-center text-blue-300 hover:text-blue-400 transition"
                        data-target="profile">
                        <svg class="h-6 w-6 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path d="M5.121 17.804A6 6 0 0112 16h0a6 6 0 016.879 1.804M15 11a3 3 0 11-6 0 3 3 0 016 0z">
                            </path>
                        </svg>
                        <span class="text-xs">Profile</span>
                    </button></li>
                <li><button class="nav-btn flex flex-col items-center text-blue-300 hover:text-blue-400 transition"
                        data-target="settings">
                        <svg class="h-6 w-6 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path d="M12 8c-1.657 0-3 1.343-3 3v1h6v-1c0-1.657-1.343-3-3-3zM6 14v2h12v-2H6z"></path>
                        </svg>
                        <span class="text-xs">Settings</span>
                    </button></li>
                <li><button class="nav-btn flex flex-col items-center text-blue-300 hover:text-blue-400 transition"
                        data-target="safety">
                        <svg class="h-6 w-6 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path d="M9.75 9.75l4.5 4.5M4.5 12a7.5 7.5 0 0115 0 7.5 7.5 0 01-15 0z"></path>
                        </svg>
                        <span class="text-xs">Safety Tips</span>
                    </button></li>
                <li><button class="nav-btn flex flex-col items-center text-blue-300 hover:text-blue-400 transition"
                        data-target="map">
                        <svg class="h-6 w-6 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path d="M8 17l4-4 4 4m0-8l-4 4-4-4"></path>
                        </svg>
                        <span class="text-xs">View Map</span>
                    </button></li>
            </ul>
        </div>
    </main>
    <!-- Small CSS animations -->

    <!-- Ionicons (v5) -->
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
    <!-- For the map purpose -->
    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <!-- Optional: Gesture Handling Plugin JS -->
    <script src="https://unpkg.com/leaflet-gesture-handling"></script>
    <!-- JavaScript for Magic Section Switch -->
    <script>
        let isAudioPlaying = false;  // Flag to track if the audio is playing
        let audio = new Audio('../p-s.mp3');  // Audio element

        function triggerEmergency() {
            const panicBtn = document.getElementById('panicBtn');

            if (!isAudioPlaying) {
                // Start playing audio
                audio.play();
                isAudioPlaying = true;

                // Change panic button background to green
                panicBtn.style.backgroundColor = 'green';

                // Optional: Send the alert to the server
                fetch('/trigger-alert', { method: 'POST' });

                // Vibration if supported
                if (navigator.vibrate) navigator.vibrate([300, 100, 300]);
            } else {
                // Stop the audio if it is playing
                audio.pause();
                audio.currentTime = 0;  // Reset the audio to the start
                isAudioPlaying = false;

                // Change panic button background back to red
                panicBtn.style.backgroundColor = 'red';
            }

            // Optional: Change color back to default after 3 seconds
            setTimeout(() => {
                panicBtn.style.color = 'white';
            }, 3000);
        }


        // alert('Emergency alert sent!');

        // For delele contact form submission
        document.addEventListener("DOMContentLoaded", () => {
            document.querySelectorAll('.delete-contact-btn').forEach(button => {
                button.addEventListener('click', async function () {
                    const contactId = this.dataset.id;

                    if (!confirm("Are you sure you want to delete this contact?")) return;

                    try {
                        const res = await fetch(`/delete-emergency-contact/${contactId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        const result = await res.json();

                        if (res.ok) {
                            // alert("Contact deleted successfully.");
                            location.reload(); // or dynamically remove element from DOM
                        } else {
                            alert(result.error || "Failed to delete contact.");
                        }
                    } catch (err) {
                        console.error("Error deleting contact:", err);
                        alert("Something went wrong.");
                    }
                });
            });
        });
        // For emergency contact form submission
        document.getElementById('emergencyContactForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const data = {
                emergencyContact: document.getElementById('emergencyContact').value,
                emergencyContactName: document.getElementById('emergencyContactName').value,
                emergencyContactEmail: document.getElementById('emergencyContactEmail').value,
                relation: document.getElementById('relation').value
            };

            try {
                const response = await fetch('/save-emergency-contact', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                const result = await response.json();
                const msg = document.getElementById('responseMsgForEmergencyContact');

                if (response.ok) {
                    msg.textContent = result.message;
                    msg.classList.remove('hidden', 'text-red-500');
                    msg.classList.add('text-green-500');

                    // ✅ Reset the form
                    document.getElementById('emergencyContactForm').reset();

                    // ✅ Hide the message after 5 seconds
                    setTimeout(() => {
                        msg.classList.add('hidden');
                        location.reload(); // or dynamically remove element from DOM

                    }, 2000);
                } else {
                    msg.textContent = result.error || 'Something went wrong!';
                    msg.classList.remove('hidden', 'text-green-500');
                    msg.classList.add('text-red-500');

                    // ✅ Hide the message after 5 seconds
                    setTimeout(() => {
                        msg.classList.add('hidden');
                    }, 5000);
                }


            } catch (err) {
                console.error('Error submitting emergency contact:', err);
            }
        });

        // Setting ajax calling 
        document.getElementById('settingsForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const data = {
                // emergencyContact: document.getElementById('emergencyContact').value,
                alertMode: document.getElementById('alertMode').value,
                // safeZone: parseInt(document.getElementById('safeZone').value),
                liveLocation: document.getElementById('liveLocation').checked,
                // notifyAlerts: document.getElementById('notifyAlerts').checked
            };

            try {
                const response = await fetch('/update-settings', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                const msgElem = document.getElementById('responseMsg');
                if (response.ok) {
                    msgElem.textContent = "Settings saved successfully!";
                    msgElem.classList.remove("hidden");
                    msgElem.classList.remove("text-red-500");
                    msgElem.classList.add("text-green-500");

                    // ✅ Reset the form
                    document.getElementById('settingsForm').reset();
                } else {
                    msgElem.textContent = result.message || "Failed to save settings.";
                    msgElem.classList.remove("hidden");
                    msgElem.classList.remove("text-green-500");
                    msgElem.classList.add("text-red-500");
                }
            } catch (err) {
                console.error(err);
            }
        });


        // Replace with EJS dynamic values
        const lat = <%= location?.latitude || 28.6139 %>;  // fallback to Delhi
        const lng = <%= location?.longitude || 77.2090 %>;
        // const lng = 88.3162698
        // const lat = 22.6351598

        // Base layers
        const osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        });

        const satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' +
            'World_Imagery/MapServer/tile/{z}/{y}/{x}', {
            attribution: '&copy; Esri, Earthstar Geographics'
        });

        // Map init
        const map = L.map('userMap', {
            center: [lat, lng],
            zoom: 15,
            layers: [osm],
            gestureHandling: true  // only works if you included the plugin
        });

        // Add marker
        L.marker([lat, lng]).addTo(map).bindPopup("Your last location").openPopup();

        // Add layer switcher
        const baseMaps = {
            "Street View": osm,
            "Satellite View": satellite
        };
        L.control.layers(baseMaps).addTo(map);

        // Enable zoom & drag gestures manually (for mobile support)
        map.scrollWheelZoom.enable();
        map.touchZoom.enable();
        map.dragging.enable();
        map.doubleClickZoom.enable();






        // Image uploading section 
        function toggleEdit() {
            const display = document.getElementById('profile-display');
            const form = document.getElementById('profile-edit');
            const uploadLabel = document.getElementById('uploadLabel');

            if (form.classList.contains('hidden')) {
                display.classList.add('hidden');
                form.classList.remove('hidden');
                uploadLabel.classList.remove('hidden'); // show upload button
            } else {
                display.classList.remove('hidden');
                form.classList.add('hidden');
                uploadLabel.classList.add('hidden'); // hide upload button
            }
        }

        function previewImage(event) {
            const img = document.getElementById('profileImg');
            const file = event.target.files[0];
            if (file) {
                img.src = URL.createObjectURL(file);
            }
        }

        async function saveProfile(event) {
            event.preventDefault();  // Prevent page reload on form submission

            const form = event.target;
            const formData = new FormData(form);

            // Get the selected image file (if any)
            const imageUpload = document.getElementById('imageUpload');
            if (imageUpload.files[0]) {
                formData.append('profileImage', imageUpload.files[0]);
            }

            try {
                const response = await fetch('/profile/update', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                if (result.success) {
                    // alert('Profile updated successfully!');
                    toggleEdit(); // Hide the form after successful save

                    // Update the image dynamically
                    const imgEl = document.getElementById('profileImagem');
                    if (result.profileImage) {
                        // imgEl.src = result.profileImage;
                    }
                    const name = document.getElementById('name');
                    document.querySelectorAll('.user-name').forEach(el => {
                        el.textContent = 'Welcome, ' + result.name;
                    });

                } else {
                    alert('Error updating profile');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while updating the profile.', error.message);
            }
        }

        const navButtons = document.querySelectorAll('.nav-btn');
        const sections = document.querySelectorAll('.section');

        function showSection(targetId) {
            sections.forEach(sec => {
                sec.classList.toggle('hidden', sec.id !== targetId);
            });
        }

        // Add click listener to each button
        navButtons.forEach(btn => {
            btn.addEventListener('click', () => {
                const target = btn.getAttribute('data-target');
                localStorage.setItem('activeSection', target); // Save in localStorage
                showSection(target);
            });
        });

        // On page load, restore last section from localStorage
        window.addEventListener('DOMContentLoaded', () => {
            const savedSection = localStorage.getItem('activeSection');
            if (savedSection) {
                showSection(savedSection);
            } else {
                showSection(sections[0].id); // Show first section if none saved
            }
        });



        // Location taking 
        let userId = '<%= user._id %>';
        let lastLocationUpdateTime = <%= lastLocationUpdateTime || 'null' %>;
        let locationInterval = null;

        function requestLocationPopup() {
            const popup = document.getElementById('locationPopup');
            popup.style.display = 'flex';
        }

        function hideLocationPopup() {
            const popup = document.getElementById('locationPopup');
            popup.style.display = 'none';
        }

        function requestLocation() {
            const spinner = document.getElementById('spinner');
            const allowBtn = document.getElementById('allowBtn');

            spinner.classList.remove('hidden');
            allowBtn.disabled = true;
            allowBtn.classList.add('opacity-50', 'cursor-not-allowed');

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        sendLocation(position.coords.latitude, position.coords.longitude);
                        hideLocationPopup();

                        spinner.classList.add('hidden');
                        allowBtn.disabled = false;
                        allowBtn.classList.remove('opacity-50', 'cursor-not-allowed');

                        if (!locationInterval) {
                            locationInterval = setInterval(checkLocation, 240000);
                        }
                    },
                    (error) => {
                        console.log('Permission denied or location error:', error);
                        requestLocationPopup();

                        spinner.classList.add('hidden');
                        allowBtn.disabled = false;
                        allowBtn.classList.remove('opacity-50', 'cursor-not-allowed');
                    },
                    { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }
                );
            } else {
                alert("Geolocation is not supported by your browser.");
            }
        }

        function checkLocation() {
            navigator.geolocation.getCurrentPosition(
                (position) => {
                    sendLocation(position.coords.latitude, position.coords.longitude);
                },
                (error) => {
                    console.log('Lost location permission, showing popup again.');
                    requestLocationPopup();
                    clearInterval(locationInterval);
                    locationInterval = null;
                },
                { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }
            );
        }

        function sendLocation(latitude, longitude) {
            axios.post('/update-location', { latitude, longitude, userId })
                .then(response => {
                    console.log('Location updated:', response.data);
                })
                .catch(error => {
                    console.error('Error sending location:', error);
                });
        }
        const logout = document.getElementById('logout');
        if (logout) {
            logout.onclick = () => {
                localStorage.removeItem('activeSection');
            };
        }


        window.onload = () => {
            const now = Date.now();
            const fourMinutes = 10 * 60 * 1000; // 240000 ms

            if (lastLocationUpdateTime && (now - lastLocationUpdateTime) <= fourMinutes) {
                console.log('Recent location available, no need to show popup.');
                hideLocationPopup();

                if (!locationInterval) {
                    locationInterval = setInterval(checkLocation, 240000);
                }
            } else {
                console.log('Location not updated recently, trying to get location silently...');

                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        (position) => {
                            sendLocation(position.coords.latitude, position.coords.longitude);
                            hideLocationPopup();

                            if (!locationInterval) {
                                locationInterval = setInterval(checkLocation, 240000);
                            }
                        },
                        (error) => {
                            console.log('Silent location fetch failed, asking user...');
                            requestLocationPopup();
                        },
                        { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }
                    );
                } else {
                    requestLocationPopup();
                }
            }
        };

    </script>

</body>

</html>